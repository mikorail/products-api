definitions:
  models.Category:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Customer:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - email
    - name
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      customer_id:
        type: integer
      id:
        type: integer
      product:
        $ref: '#/definitions/models.Product'
      product_id:
        type: integer
      quantity:
        type: integer
      total_price:
        type: number
    type: object
  models.Product:
    properties:
      category:
        $ref: '#/definitions/models.Category'
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      price:
        type: number
      stock_quantity:
        type: integer
      updated_at:
        type: string
    required:
    - category_id
    - name
    - price
    - stock_quantity
    type: object
  models.PurchaseOrderRequest:
    properties:
      customer_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
    type: object
info:
  contact: {}
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Retrieve a list of categories
      produces:
      - application/json
      responses:
        "200":
          description: Categories retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Failed to retrieve categories
          schema:
            additionalProperties: true
            type: object
      summary: Get Categories
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Category created successfully
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid input data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create category
          schema:
            additionalProperties: true
            type: object
      summary: Create Category
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Category deleted successfully
        "500":
          description: Failed to delete category
          schema:
            additionalProperties: true
            type: object
      summary: Delete Category
      tags:
      - Categories
    get:
      consumes:
      - application/json
      description: Retrieve a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Category retrieved successfully
          schema:
            $ref: '#/definitions/models.Category'
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
      summary: Get Category by ID
      tags:
      - Categories
    put:
      consumes:
      - application/json
      description: Update an existing category by its ID
      parameters:
      - description: Updated category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid input data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update category
          schema:
            additionalProperties: true
            type: object
      summary: Update Category
      tags:
      - Categories
  /customers:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of customers
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Customers retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to retrieve customers
          schema:
            additionalProperties: true
            type: object
      summary: Get Customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Create a new customer
      parameters:
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: Customer created successfully
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Invalid input data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create customer
          schema:
            additionalProperties: true
            type: object
      summary: Create Customer
      tags:
      - Customers
  /customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer by its ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Customer deleted successfully
        "500":
          description: Failed to delete customer
          schema:
            additionalProperties: true
            type: object
      summary: Delete Customer
      tags:
      - Customers
    get:
      consumes:
      - application/json
      description: Retrieve a customer by its ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Customer retrieved successfully
          schema:
            $ref: '#/definitions/models.Customer'
        "404":
          description: Customer not found
          schema:
            additionalProperties: true
            type: object
      summary: Get Customer by ID
      tags:
      - Customers
    put:
      consumes:
      - application/json
      description: Update an existing customer by its ID
      parameters:
      - description: Updated customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: Customer updated successfully
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Invalid input data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update customer
          schema:
            additionalProperties: true
            type: object
      summary: Update Customer
      tags:
      - Customers
  /orders:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of orders
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Orders retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to retrieve orders
          schema:
            additionalProperties: true
            type: object
      summary: Get Orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create a new order
      parameters:
      - description: Order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Order created successfully
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid order data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create order
          schema:
            additionalProperties: true
            type: object
      summary: Create Order
      tags:
      - Orders
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Order deleted successfully
        "500":
          description: Failed to delete order
          schema:
            additionalProperties: true
            type: object
      summary: Delete Order
      tags:
      - Orders
    get:
      consumes:
      - application/json
      description: Retrieve an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order retrieved successfully
          schema:
            $ref: '#/definitions/models.Order'
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
      summary: Get Order by ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Update an existing order by its ID
      parameters:
      - description: Updated order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: Order updated successfully
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid input data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update order
          schema:
            additionalProperties: true
            type: object
      summary: Update Order
      tags:
      - Orders
  /orders/history:
    get:
      consumes:
      - application/json
      description: Fetch the order history for the user
      produces:
      - application/json
      responses:
        "200":
          description: Order history retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "500":
          description: Failed to fetch order history
          schema:
            additionalProperties: true
            type: object
      summary: Get Order History
      tags:
      - Orders
  /orders/purchase:
    post:
      consumes:
      - application/json
      description: Create a new purchase order
      parameters:
      - description: Purchase order data
        in: body
        name: purchaseOrder
        required: true
        schema:
          $ref: '#/definitions/models.PurchaseOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Purchase order created successfully
          schema:
            $ref: '#/definitions/models.PurchaseOrderRequest'
        "400":
          description: Invalid purchase order data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create purchase order
          schema:
            additionalProperties: true
            type: object
      summary: Purchase Order
      tags:
      - Orders
  /products:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of products
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Products retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Product created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid product data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create Product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Product deleted successfully
        "500":
          description: Failed to delete product
          schema:
            additionalProperties: true
            type: object
      summary: Delete Product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Product updated successfully
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Invalid input data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update product
          schema:
            additionalProperties: true
            type: object
      summary: Update Product
      tags:
      - Products
  /products/filter:
    get:
      consumes:
      - application/json
      description: Fetch products with applied filters, supporting pagination and
        sorting
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: pageSize
        type: integer
      - description: Filter by product name
        in: query
        name: name
        type: string
      - description: Filter by category ID
        in: query
        name: category_id
        type: string
      - description: Filter by minimum price
        in: query
        name: price_min
        type: string
      - description: Filter by maximum price
        in: query
        name: price_max
        type: string
      - description: Field to sort by
        in: query
        name: sort_field
        type: string
      - description: Order of sorting (asc or desc)
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Products retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch products
          schema:
            additionalProperties: true
            type: object
      summary: Get Products by Filter
      tags:
      - Products
  /products/report:
    get:
      consumes:
      - application/json
      description: Fetch a product report for dashboards with pagination and filtering
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: pageSize
        type: integer
      - description: Filter by product name
        in: query
        name: name
        type: string
      - description: Filter by category ID
        in: query
        name: category_id
        type: string
      - description: Filter by minimum price
        in: query
        name: price_min
        type: string
      - description: Filter by maximum price
        in: query
        name: price_max
        type: string
      - description: Field to sort by
        in: query
        name: sort_field
        type: string
      - description: Order of sorting (asc or desc)
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product report retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Product Report
      tags:
      - Products
  /products/with-total-sold:
    get:
      consumes:
      - application/json
      description: Fetch a list of products along with their total sold quantities,
        supporting pagination, filtering, and sorting.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: limit
        type: integer
      - description: Filter by product category
        in: query
        name: category
        type: string
      - description: Field to sort by (e.g., 'total_sold_amount')
        in: query
        name: sort_by
        type: string
      - description: Order of sorting (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success with total products count and products list
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Products with Total Sold
      tags:
      - Products
  /products/with-total-sold/csv:
    get:
      consumes:
      - application/json
      description: Fetch products with total sold quantities and download as a CSV
        report
      parameters:
      - description: Filter by product name
        in: query
        name: name
        type: string
      - description: Filter by category ID
        in: query
        name: category_id
        type: string
      - description: Filter by minimum price
        in: query
        name: price_min
        type: string
      - description: Filter by maximum price
        in: query
        name: price_max
        type: string
      - description: Field to sort by
        in: query
        name: sort_field
        type: string
      - description: Order of sorting (asc or desc)
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: CSV report generated successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch products
          schema:
            additionalProperties: true
            type: object
      summary: Get Products with Total Sold (CSV)
      tags:
      - Products
  /reports/top-customers:
    get:
      consumes:
      - application/json
      description: Fetch a list of top customers based on their total spent amount
      produces:
      - application/json
      responses:
        "200":
          description: Top customers retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
        "500":
          description: Failed to fetch top customers
          schema:
            additionalProperties: true
            type: object
      summary: Get Top Customers
      tags:
      - Reports
swagger: "2.0"
